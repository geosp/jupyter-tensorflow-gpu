apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: tensorflow-jupyter
  name: tensorflow-jupyter
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: tensorflow-jupyter
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.service: tensorflow-jupyter
    spec:
      containers:
        - command:
            - jupyter
            - notebook
            - --allow-root
            - --ip
            - 0.0.0.0
            - --no-browser
            - --NotebookApp.password='sha1:67e1d580e9a4:2562cba4452b776c7753a06f37264307f1437105'
          image: tensorflow/tensorflow:latest-gpu-jupyter
          imagePullPolicy: IfNotPresent
          name: tensorflow-jupyter
          ports:
            - containerPort: 8888
            - containerPort: 6006
          volumeMounts:
            - mountPath: /tf
              name: tensorflow-jupyter-data-pv-claim
              readOnly: false
          resources: { limits: { "nvidia.com/gpu": 1 } }
      hostname: tensorflow-jupyter
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: tensorflow-jupyter-data-pv-claim
          persistentVolumeClaim:
            claimName: tensorflow-jupyter-data-pv-claim
      nodeSelector:
        kubernetes.io/hostname: pop-os
status: {}
